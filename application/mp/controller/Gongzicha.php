<?php
// +----------------------------------------------------------------------
// | [RhaPHP System] Copyright (c) 2017 http://www.rhaphp.com/
// +----------------------------------------------------------------------
// | [RhaPHP] 并不是自由软件,你可免费使用,未经许可不能去掉RhaPHP相关版权
// +----------------------------------------------------------------------
// | Author: Geeson <qimengkeji@vip.qq.com>
// +----------------------------------------------------------------------


namespace app\mp\controller;



use think\Db;
use think\Exception;
use think\facade\Request;
use think\facade\Session;
use think\facade\Url;
use think\Validate;
use PHPExcel;

class Gongzicha extends Base
{
    protected $excel_id;


    public function initialize()
    {

        parent::initialize(); // TODO: Change the autogenerated stub

    }

    public function index()
    {
        $keyword = input('keyword');
         if ($keyword) {
            $idcard[] = ['idcard', 'like', "%{$keyword}%"];
            $realname[] = ['realname', 'like', "%{$keyword}%"];
        }else{
            $idcard = '';
            $realname = '';
        }
        $result = Db::name('wage')
            ->where('status=1')
            ->where($idcard)
            ->whereOr($realname)
            ->order('id','desc')
            ->paginate(10,false,['query' => ['keyword'=>$keyword]]
        );
        $page = $result->render();
        $this->assign('keyword',$keyword);
        $this->assign('count',$result->total());
        $this->assign('data',$result);
        $this->assign('page', $page);
        return view();
    }

    // 导入页面
    public function import(){
        return view();
    }

    // 详情页面
    public function details(){
        $id['id'] = input('get.id');
        $data = Db::name('wage')
        ->where($id)
        ->find();
        $info = unserialize($data['content']);
        $this->assign('list',$info);
        $this->assign('salary_final',$data['salary_final']);
        return view();
    }

    // 删除一条数据
    public function delete(){
        $id = input('post.');
        $res = Db::name('wage')
        ->where($id)
        ->update(
            ['status'=>'-1']
        );
        if ($res) {
            ajaxMsg(1,'删除成功!');
        }else{
            ajaxMsg(0,'删除失败!');
        }
    }

    public function addExcel(){
        $file_name = input('post.file_name');

        if (empty($file_name)) {
            ajaxMsg('0','请输入标题!');
        }

        if ($_FILES['file']['error'] != 0) {
            ajaxMsg('0','请选择文件!');
        }
        
        if(request()->isPost()){
            $file = request()->file('file');

            // 移动到框架应用根目录/public/uploads/ 目录下
            $info = $file->move(ROOT_PATH . 'public' .DS.'uploads'. DS . 'excel');

            if($info){
                //获取文件所在目录名
                $path=ROOT_PATH . 'public' . DS.'uploads'.DS .'excel/'.$info->getSaveName();
                $excel_id = Db::name("wage_file")->insertGetId([
                    'fiel_name'=> $file_name,
                    'createtime'=> time(),
                    'path'=>$path
                ]);

                //获取文件后缀
                $extension = strtolower( pathinfo($path, PATHINFO_EXTENSION) );

                if ($extension =='xlsx') {
                    $objReader = new \PHPExcel_Reader_Excel2007();
                    $objExcel = $objReader ->load($path);
                } else if ($extension =='xls') {
                    $objReader = new \PHPExcel_Reader_Excel5();
                    $objExcel = $objReader ->load($path);
                } else if ($extension=='csv') {
                    $PHPReader = new \PHPExcel_Reader_CSV();

                    //默认输入字符集
                    $PHPReader->setInputEncoding('GBK');

                    //默认的分隔符
                    $PHPReader->setDelimiter(',');

                    //载入文件
                    $objExcel = $PHPReader->load($file);
                }else{
                    ajaxMsg('0','文件格式错误!');
                }
                $sheet = $objExcel->getSheet(0);
                $highestRow = $sheet->getHighestRow(); // 取得总行数
                $colsNum = $sheet->getHighestColumn(); // 取得总列数
                $highestColumm = \PHPExcel_Cell::columnIndexFromString($colsNum);
                if ($highestColumm < 5) {
                    $this->error('工资表 文件少于5列');
                }

                if ($highestColumm > 60) {
                    $highestColumm = 60;
                }

                /** 循环读取每个单元格的数据 */
                $row_count = 0;
                $fail_arr = [];

                // //获取行的数组
                $column_name_arr = [];
                for ($column = 1; $column <= $highestColumm; $column++) {
                    $column_name = $sheet->getCellByColumnAndRow($column - 1, 1)->getCalculatedValue();
                    if (!empty($column_name)) {
                        $column_name_arr[$column] = $column_name;
                    } else {
                        $column_name_arr[$column] = '未知项';
                    }
                }
                // 1姓名
                // 2身份证号码
                // 3实发

                //获取行的数组 end
                for ($row = 2; $row <= $highestRow; $row++) {
                    $content = [];
                    for ($column = 1; $column <= $highestColumm; $column++) {
                        $calculatedValue = $sheet->getCellByColumnAndRow($column - 1, $row)->getCalculatedValue();
                        $content[$column_name_arr[$column]] = $calculatedValue ? $calculatedValue : '';
                    }

                    if (empty($content['身份证号码'])) {
                        $fail_arr[] = '行' . $row . ' 身份证号码缺少,请输入合法标题(身份证号码)';
                        continue;
                    }
                    if (empty($content['员工姓名'])) {
                        $fail_arr[] = '行' . $row . ' 姓名缺少,请输入合法标题(员工姓名)';
                        continue;
                    }
                    if (empty($content['实发工资'])) {
                        $fail_arr[] = '行' . $row . ' 实发缺少,请输入合法值(实发工资)';
                        continue;
                    }
                    DB::name('wage')->insertGetId([
                        'mpid' => $this->mpid,
                        'realname' => $content['员工姓名'],
                        'idcard' => $content['身份证号码'],
                        'salary_final' => $content['实发工资'],
                        'content' => serialize($content),
                        'createtime' => time(),
                        'file_id' => $excel_id,
                        // 'input_user_id' => session('ADMIN_ID'),
                    ]);
                    //新增一条工资 end
                    $row_count++;
                }
                echo date('H:i:s'), " 导入内部员工工资成功！新增" . $row_count . "条，失败" . count($fail_arr) . "条";
                if (!empty($fail_arr)) {
                    foreach ($fail_arr as $key => $value) {
                        echo '<br />' . $value;
                    }
                }

            }else{
                // 上传失败获取错误信息
                // $this->error($file->getError());
            }
        }
    }
}
